{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = ({\n  market\n}) => {\n  _s();\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, SetTimePeriod] = useState('7d');\n  const [data, SetData] = useState([]);\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  function search() {\n    for (let x of market.coins) {\n      if (x.id === Number(coinId)) {\n        SetData(x);\n      }\n    }\n  }\n\n  useEffect(() => {\n    search();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-detail-container\",\n      children: [console.log(data), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-heading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: \"coin-name\",\n          children: [data.name, \" (\", data.slug, \") Price\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.name, \" live price in Us dollars. View value status, market cap and supply.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"7d\",\n        className: \"select-timeperiod\",\n        placeholder: \"Select Time preiod\",\n        onChange: value => SetTimePeriod(value),\n        children: time.map(a => /*#__PURE__*/_jsxDEV(Option, {\n          children: a\n        }, a, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"stats-container\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-value-statistics\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value=statistics-heading\",\n          children: \"hojin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CryptoDetails, \"VWVOsFCNI0f0L1u9IR+s9SGLN3A=\", false, function () {\n  return [useParams];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/CryptoDetails.jsx"],"names":["HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useState","useEffect","Title","Text","Option","CryptoDetails","market","coinId","timePeriod","SetTimePeriod","data","SetData","time","search","x","coins","id","Number","console","log","name","slug","value","map","a"],"mappings":"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","sourcesContent":["\nimport HTMLReactParser from \"html-react-parser\"\nimport { useParams } from \"react-router-dom\"\nimport millify from \"millify\"\nimport {Col, Row, Typography, Select} from \"antd\"\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst {Title, Text} = Typography\nconst {Option} = Select\n\nconst CryptoDetails = ({market}) =>{\n    const {coinId} = useParams()\n    const [timePeriod, SetTimePeriod] = useState('7d')\n    const [data, SetData] = useState([])\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n    function search(){\n        for(let x of market.coins){\n            if(x.id === Number(coinId)) {\n                SetData(x)\n            }\n        }\n    }\n    \n    useEffect(()=>{\n        search()\n    },[])\n\n    return(\n        <>\n        <Col className=\"coin-detail-container\">\n            {console.log(data)}\n            <Col className=\"coin-heading-container\">\n                <Title className=\"coin-name\">\n                    {data.name} ({data.slug}) Price\n                </Title>\n                <p>\n                    {data.name} live price in Us dollars.\n                    View value status, market cap and supply.\n                </p>\n            </Col>\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time preiod\" onChange={(value)=> SetTimePeriod(value)}>\n                {time.map((a)=> <Option key={a}>{a}</Option>)}\n            </Select>\n        </Col >\n        <Col className=\"stats-container\">\n            <Col className=\"coin-value-statistics\">\n                <Col className=\"coin-value=statistics-heading\">\n                    hojin\n                </Col>\n            </Col>\n        </Col>\n        </>\n\n\n    )\n}\n\nexport default CryptoDetails"]},"metadata":{},"sourceType":"module"}