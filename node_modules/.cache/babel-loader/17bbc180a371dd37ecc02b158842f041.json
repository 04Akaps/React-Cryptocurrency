{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/LineChart.jsx\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName\n}) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory.length; i++) {\n    coinPrice.push(coinHistory[i]);\n    coinTimestamp.push(new Date());\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(coinTimestamp), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"chart-header\",\n      children: [console.log(coinHistory), /*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"chart-title\",\n        children: [coinName, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"price-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"price-change\",\n          children: [Math.round((coinHistory[0] - coinHistory[coinHistory.length - 1]) * 10) / 100, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"current-price\",\n          children: [\"Current \", coinName, \" Price : $ \", currentPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/LineChart.jsx"],"names":["Line","Col","Row","Typography","Title","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","length","push","Date","console","log","Math","round"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,iBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,UAAlB,QAAmC,MAAnC;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,UAAjB;;AACA,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,KAA0C;AAExD,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,aAAa,GAAG,EAAtB;;AAEA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,WAAW,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnCF,IAAAA,SAAS,CAACI,IAAV,CAAeP,WAAW,CAACK,CAAD,CAA1B;AACAD,IAAAA,aAAa,CAACG,IAAd,CAAmB,IAAIC,IAAJ,EAAnB;AACH;;AACD,sBACI;AAAA,eACCC,OAAO,CAACC,GAAR,CAAYN,aAAZ,CADD,eAEI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKK,OAAO,CAACC,GAAR,CAAYV,WAAZ,CADL,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,SAAS,EAAC,aAA3B;AAAA,mBACKE,QADL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAiB,UAAA,SAAS,EAAC,cAA3B;AAAA,qBACSS,IAAI,CAACC,KAAL,CAAW,CAACZ,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAACA,WAAW,CAACM,MAAZ,GAAmB,CAApB,CAA7B,IAAqD,EAAhE,IAAoE,GAD7E;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAiB,UAAA,SAAS,EAAC,eAA3B;AAAA,iCACaJ,QADb,iBACkCD,YADlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAoBH,CA7BD;;KAAMF,S;AA+BN,eAAeA,SAAf","sourcesContent":["import {Line} from \"react-chartjs-2\"\nimport {Col, Row, Typography} from \"antd\"\n\nconst { Title} = Typography\nconst LineChart = ({coinHistory, currentPrice, coinName}) =>{\n\n    const coinPrice = []\n    const coinTimestamp = []\n\n    for(let i=0; i<coinHistory.length; i++){\n        coinPrice.push(coinHistory[i])\n        coinTimestamp.push(new Date())\n    }\n    return(\n        <>\n        {console.log(coinTimestamp)}\n            <Row className=\"chart-header\">\n                {console.log(coinHistory)}\n                <Title level={2} className=\"chart-title\">\n                    {coinName} Price Chart\n                </Title>\n                <Col className=\"price-container\">\n                    <Title level={5} className=\"price-change\">\n                            {Math.round((coinHistory[0] - coinHistory[coinHistory.length-1])*10)/100} %\n                    </Title>\n                    <Title level={5} className=\"current-price\">\n                        Current {coinName} Price : $ {currentPrice}\n                    </Title>\n                </Col>\n            </Row>\n            {/* <Line data={data} options={options}/> */}\n        </>\n    )\n}\n\nexport default LineChart"]},"metadata":{},"sourceType":"module"}