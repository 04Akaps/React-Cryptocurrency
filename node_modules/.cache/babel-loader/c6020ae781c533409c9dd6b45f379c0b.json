{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  market,\n  simplified\n}) => {\n  _s();\n\n  let coin = market.coins;\n  let count = simplified ? 12 : 100;\n  const [search, SetSearch] = useState(\"\");\n  useEffect(() => {}, [coin, search]);\n\n  const setSearchTerm = e => {// SetSearch(e.target.value)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-crypto\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search Cryptocurrency\",\n        onChange: setSearchTerm,\n        value: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      className: \"crypto-card-container\",\n      children: coin.map(currency => {\n        while (count > 0) {\n          {\n            count = count - 1;\n          }\n          return /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            lg: 6,\n            className: \"crypto-card\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/crypto/${currency.id}`,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: `${currency.rank}. ${currency.name}`,\n                extra: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"crypto-image\",\n                  src: currency.iconUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 81\n                }, this),\n                hoverable: true,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price: \", millify(currency.price)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Market Cap: \", millify(currency.marketCap)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Daily Change: \", currency.change, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this)\n            }, currency.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, currency.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cryptocurrencies, \"kjPiPTt8MM9V1Iy0gYSunAC4tdQ=\");\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/Cryptocurrencies.jsx"],"names":["millify","Link","Card","Row","Col","Input","useState","useEffect","Cryptocurrencies","market","simplified","coin","coins","count","search","SetSearch","setSearchTerm","e","map","currency","id","rank","name","iconUrl","price","marketCap","change"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,MAAtC;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;;;AAKA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAC9C,MAAIC,IAAI,GAAGF,MAAM,CAACG,KAAlB;AACA,MAAIC,KAAK,GAAGH,UAAU,GAAG,EAAH,GAAO,GAA7B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,CAACI,IAAD,EAAOG,MAAP,CAFO,CAAT;;AAIA,QAAME,aAAa,GAAIC,CAAD,IAAM,CACxB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,KAAD;AAAQ,QAAA,WAAW,EAAC,uBAApB;AAA4C,QAAA,QAAQ,EAAED,aAAtD;AAAqE,QAAA,KAAK,EAAEF;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAI,EAAJ,CAAb;AAAsB,MAAA,SAAS,EAAC,uBAAhC;AAAA,gBACEH,IAAI,CAACO,GAAL,CAAUC,QAAD,IAAY;AAClB,eAAMN,KAAK,GAAG,CAAd,EAAgB;AACZ;AAACA,YAAAA,KAAK,GAAGA,KAAK,GAAE,CAAf;AAAkB;AACpB,8BACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,EAAjB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,aAAtC;AAAA,mCACA,QAAC,IAAD;AAAwB,cAAA,EAAE,EAAG,WAAUM,QAAQ,CAACC,EAAG,EAAnD;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAG,GAAED,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,IAAK,EAAhD;AAAmD,gBAAA,KAAK,eAAE;AAAK,kBAAA,SAAS,EAAC,cAAf;AAA8B,kBAAA,GAAG,EAAEH,QAAQ,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,wBAA1D;AAAmH,gBAAA,SAAS,MAA5H;AAAA,wCACE;AAAA,wCAAWvB,OAAO,CAACmB,QAAQ,CAACK,KAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,6CAAgBxB,OAAO,CAACmB,QAAQ,CAACM,SAAV,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,+CAAkBN,QAAQ,CAACO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAWP,QAAQ,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AADA,aAAyDD,QAAQ,CAACC,EAAlE;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUF;AACL,OAdC;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAwBH,CApCD;;GAAMZ,gB;;KAAAA,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["import millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\nimport { useState,useEffect } from 'react'\n\n\n\n\nconst Cryptocurrencies = ({market, simplified}) =>{\n    let coin = market.coins\n    let count = simplified ? 12 :100\n    const [search, SetSearch] = useState(\"\")\n\n    useEffect(()=>{\n\n    },[coin, search])\n\n    const setSearchTerm = (e) =>{\n        // SetSearch(e.target.value)\n    }\n    return(\n        <>\n        <div className=\"search-crypto\">\n            <Input  placeholder=\"Search Cryptocurrency\" onChange={setSearchTerm} value={search}/>\n        </div>\n        <Row gutter={[32,32]} className=\"crypto-card-container\">\n         {coin.map((currency)=>{\n             while(count > 0){\n                 {count = count -1 }\n                return(\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                    <Link key={currency.id} to={`/crypto/${currency.id}`}>\n                      <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}  hoverable>\n                        <p>Price: {millify(currency.price)}</p>\n                        <p>Market Cap: {millify(currency.marketCap)}</p>\n                        <p>Daily Change: {currency.change}%</p>\n                      </Card>\n                    </Link>\n                  </Col>\n            )}\n        })}\n        </Row>\n        </>\n    )\n}\nexport default Cryptocurrencies"]},"metadata":{},"sourceType":"module"}