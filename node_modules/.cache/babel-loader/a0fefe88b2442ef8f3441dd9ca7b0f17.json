{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = ({\n  market\n}) => {\n  _s();\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, SetTimePeriod] = useState('7d');\n  const [data, SetData] = useState([]);\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${data.price && millify(data.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 89\n    }, this)\n  }, {\n    title: 'Rank',\n    value: data.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 50\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${data.volume && millify(data.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 89\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${data.marketCap && millify(data.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 95\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(data.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 100\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: data.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 74\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: data.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 78\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: data.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 66\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 86\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 110\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(data.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 81\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(data.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 93\n    }, this)\n  }];\n\n  function search() {\n    for (let x of market.coins) {\n      if (x.id === Number(coinId)) {\n        SetData(x);\n      }\n    }\n  }\n\n  useEffect(() => {\n    search();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-heading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: \"coin-name\",\n          children: [data.name, \" (\", data.slug, \") Price\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.name, \" live price in Us dollars. View value status, market cap and supply.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"7d\",\n        className: \"select-timeperiod\",\n        placeholder: \"Select Time preiod\",\n        onChange: value => SetTimePeriod(value),\n        children: time.map(a => /*#__PURE__*/_jsxDEV(Option, {\n          children: a\n        }, a, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-value-statistics-heading\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              className: \"coin-details-heading\",\n              children: [cryptoDetails.name, \" Value Statistics\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"An overview showing the statistics of \", data.name, \", such as the base and quote currency, the rank, and trading volume.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), stats.map(({\n            icon,\n            title,\n            value\n          }) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"coin-stats-name\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              className: \"stats\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"other-stats-info\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-value-statistics-heading\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              className: \"coin-details-heading\",\n              children: \"Other Stats Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"An overview showing the statistics of \", data.name, \", such as the base and quote currency, the rank, and trading volume.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), genericStats.map(({\n            icon,\n            title,\n            value\n          }) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"coin-stats-name\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              className: \"stats\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CryptoDetails, \"VWVOsFCNI0f0L1u9IR+s9SGLN3A=\", false, function () {\n  return [useParams];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/CryptoDetails.jsx"],"names":["HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useState","useEffect","Title","Text","Option","CryptoDetails","market","coinId","timePeriod","SetTimePeriod","data","SetData","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","search","x","coins","id","Number","name","slug","map","a","cryptoDetails"],"mappings":"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","sourcesContent":["\nimport HTMLReactParser from \"html-react-parser\"\nimport { useParams } from \"react-router-dom\"\nimport millify from \"millify\"\nimport {Col, Row, Typography, Select} from \"antd\"\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst {Title, Text} = Typography\nconst {Option} = Select\n\nconst CryptoDetails = ({market}) =>{\n    const {coinId} = useParams()\n    const [timePeriod, SetTimePeriod] = useState('7d')\n    const [data, SetData] = useState([])\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n    const stats = [\n        { title: 'Price to USD', value: `$ ${data.price && millify(data.price)}`, icon: <DollarCircleOutlined /> },\n        { title: 'Rank', value: data.rank, icon: <NumberOutlined /> },\n        { title: '24h Volume', value: `$ ${data.volume && millify(data.volume)}`, icon: <ThunderboltOutlined /> },\n        { title: 'Market Cap', value: `$ ${data.marketCap && millify(data.marketCap)}`, icon: <DollarCircleOutlined /> },\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(data.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n      ];\n\n      const genericStats = [\n        { title: 'Number Of Markets', value: data.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: data.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Aprroved Supply', value: data.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(data.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(data.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n      ];\n\n    function search(){\n        for(let x of market.coins){\n            if(x.id === Number(coinId)) {\n                SetData(x)\n            }\n        }\n    }\n    \n    useEffect(()=>{\n        search()\n    },[])\n\n    return(\n        <>\n        <Col className=\"coin-detail-container\">\n            <Col className=\"coin-heading-container\">\n                <Title className=\"coin-name\">\n                    {data.name} ({data.slug}) Price\n                </Title>\n                <p>\n                    {data.name} live price in Us dollars.\n                    View value status, market cap and supply.\n                </p>\n            </Col>\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time preiod\" onChange={(value)=> SetTimePeriod(value)}>\n                {time.map((a)=> <Option key={a}>{a}</Option>)}\n            </Select>\n\n            <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {data.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {data.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n\n        </Col >\n        \n        </>\n\n\n    )\n}\n\nexport default CryptoDetails"]},"metadata":{},"sourceType":"module"}