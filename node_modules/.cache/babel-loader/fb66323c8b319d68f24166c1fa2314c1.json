{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col } from 'antd';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = () => {\n  _s();\n\n  const [cryptos, SetCryptos] = useState(0);\n\n  if (cryptos === 0) {\n    axios.get(\"https://coinranking1.p.rapidapi.com/coins\", {\n      headers: {\n        \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"bf4e2abd1emsh95c84a25d1cac11p150d26jsnbc1a2b0c71c9\"\n      }\n    }).then(a => {\n      SetCryptos(a.data.data.coins);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cryptos === 0 ? /*#__PURE__*/_jsxDEV(Col, {\n      children: \"Loading~~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      gutters: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos !== 0 ? cryptos.map(currency => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: \"hojin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this); //     <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n        //     hojin\n        //   </Col>\n\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 50\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cryptocurrencies, \"r9zNe0YL38mc8G3BytFbE4rZq/w=\");\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n{\n  /* <Link key={currency.id} to={`/crypto/${currency.id}`}>\n                   <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\n                     <p>Price: {millify(currency.price)}</p>\n                     <p>Market Cap: {millify(currency.marketCap)}</p>\n                     <p>Daily Change: {currency.change}%</p>\n                   </Card>\n                 </Link> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/React-Cryptocurrency/src/components/Cryptocurrencies.jsx"],"names":["millify","Link","Card","Row","Col","useState","axios","Cryptocurrencies","cryptos","SetCryptos","get","headers","then","a","data","coins","map","currency"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,MAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAK;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;;AAEA,MAAGG,OAAO,KAAK,CAAf,EAAiB;AACbF,IAAAA,KAAK,CAACI,GAAN,CAAU,2CAAV,EAAuD;AACnDC,MAAAA,OAAO,EAAE;AACP,2BAAmB,6BADZ;AAEP,0BAAkB;AAFX;AAD0C,KAAvD,EAMGC,IANH,CAMSC,CAAD,IAAO;AACXJ,MAAAA,UAAU,CAACI,CAAC,CAACC,IAAF,CAAOA,IAAP,CAAYC,KAAb,CAAV;AACD,KARH;AASH;;AAKD,sBACI;AAAA,cACCP,OAAO,KAAK,CAAZ,gBAAiB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAAwC,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE,CAAC,EAAD,EAAI,EAAJ,CAAd;AAAuB,MAAA,SAAS,EAAC,uBAAjC;AAAA,gBACpCA,OAAO,KAAK,CAAZ,GAAgBA,OAAO,CAACQ,GAAR,CAAaC,QAAD,IAAY;AACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADqC,CAEzC;AACA;AACA;;AACC,OALgB,CAAhB,GAKG;AANiC;AAAA;AAAA;AAAA;AAAA;AADzC,mBADJ;AAaH,CAhCD;;GAAMV,gB;;KAAAA,gB;AAkCN,eAAeA,gBAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AAA2B","sourcesContent":["import millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col } from 'antd'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nconst Cryptocurrencies = () =>{\n    \n    const [cryptos, SetCryptos] = useState(0)\n\n    if(cryptos === 0){\n        axios.get(\"https://coinranking1.p.rapidapi.com/coins\", {\n            headers: {\n              \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"bf4e2abd1emsh95c84a25d1cac11p150d26jsnbc1a2b0c71c9\",\n            },\n          })\n          .then((a) => {\n            SetCryptos(a.data.data.coins);\n          });\n    }\n\n\n\n    \n    return(\n        <>\n        {cryptos === 0 ?  <Col>Loading~~</Col> : <Row gutters={[32,32]} className=\"crypto-card-container\">\n            {cryptos !== 0 ? cryptos.map((currency)=>{\n                <div>hojin</div>\n            //     <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            //     hojin\n            //   </Col>\n            }): null}\n        </Row>}\n        \n        </>\n    )\n}\n\nexport default Cryptocurrencies\n\n{/* <Link key={currency.id} to={`/crypto/${currency.id}`}>\n                  <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\n                    <p>Price: {millify(currency.price)}</p>\n                    <p>Market Cap: {millify(currency.marketCap)}</p>\n                    <p>Daily Change: {currency.change}%</p>\n                  </Card>\n                </Link> */}"]},"metadata":{},"sourceType":"module"}